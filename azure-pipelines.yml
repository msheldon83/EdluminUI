pool:
  vmImage: "Ubuntu 16.04"

# Build Number format
name: $(date:yy).$(DayOfYear)$(Rev:.rr)

trigger:
  batch: true
  branches:
    include:
      - master
      - pull/*

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "12.x"

  - script: |
      yarn
    displayName: "install dependencies"

  - script: |
      yarn build
    condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: "build"

  - script: |
      yarn lint &&
      yarn run jest --reporters=jest-junit
    condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: "lint and unit tests"

  - task: PublishTestResults@2
    inputs:
      testRunner: JUnit
      testResultsFiles: "junit.xml"
    condition: and(succeededOrFailed(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))

  - script: |
      mv -f ./config/production.js.prod ./config/production.js
    displayName: "set prod variables"
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - script: |
      yarn production-build
    displayName: "production build"
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - task: OctopusPack@4
    displayName: "Prod Package for Octopus"
    inputs:
      PackageId: "Edlumin.UI"
      PackageVersion: $(Build.BuildNumber)
      SourcePath: "./dist"
      OutputPath: $(Build.ArtifactStagingDirectory)
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - task: OctopusPush@4
    displayName: "Push dev packages to Octopus"
    inputs:
      OctoConnectedServiceName: "Octopus Deploy"
      Space: "Default"
      Replace: true
      Package: |
        $(Build.ArtifactStagingDirectory)/Edlumin.UI.$(Build.BuildNumber)-dev.nupkg
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - task: OctopusPush@4
    displayName: "Push prod packages to Octopus"
    inputs:
      OctoConnectedServiceName: "Octopus Deploy"
      Space: "Default"
      Replace: true
      Package: |
        $(Build.ArtifactStagingDirectory)/Edlumin.UI.$(Build.BuildNumber).nupkg
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
